{"version":3,"sources":["components/navBar/index.js","pages/HomePage/HomePage.js","pages/SigninPage/SigninPage.js","pages/SignupPage/SignupPage.js","components/imageProcessing.js","components/PostCard/PostCard.js","pages/imageProcessing.js","pages/HouseListPage/HouseListPage.js","pages/SinglePage/SinglePage.js","pages/FollowingPage/FollowingPage.js","pages/AuthorPage/AuthorPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","sm","md","lg","xl","className","style","fontSize","fontFamily","color","src","alt","width","marginRight","theme","mode","background","Item","HomeOutlined","to","ReadOutlined","onClick","fetch","method","window","location","href","ghost","Header","Layout","Content","HomePage","props","username","URLSearchParams","search","get","undefined","localStorage","setItem","useState","roomNum","setRoomNum","minPrice","setMinPrice","maxPrice","setMaxPrice","neighbor","setNeighbor","history","useHistory","Container","fluid","Row","Col","xs","span","offset","Form","Group","controlId","for","Control","type","placeholder","onChange","evt","target","value","Label","as","size","custom","Button","variant","minIntPrice","maxIntPrice","parseInt","substring","url","encodeURIComponent","push","SearchOutlined","SigninPage","console","log","getItem","action","id","name","SignupPage","imageSize","Meta","Card","PostCard","displayPrice","post","price","imageUrl","images","_id","hoverable","overflow","cover","title","description","author","address","getImageUrl","HouseListPage","useLocation","posts","setPosts","totalPages","setTotalPages","currentPage","setCurrentPage","fetchHousings","a","resp","json","respJson","params","newPosts","apartments","newTotalPages","pages","newCurrentPage","pageUrl","pageNum","set","toString","useEffect","padding","margin","event","sort","b","map","idx","justify","Pagination","First","Prev","active","Next","Last","SinglePage","houseId","useParams","house","setHouse","anno","setAnno","fetchAnno","annoResp","annoRespJson","fetchHouse","houseResp","houseRespJson","showArrows","infiniteLoop","useKeyboardArrows","img","HighlightOutlined","singleanno","UserAddOutlined","FollowingPage","following","setFollowing","fetchFollowing","followingResp","followingRespJson","display","gridTemplateColumns","gridGap","marginTop","AuthorPage","fetchPosts","App","setUser","storedUser","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a613cfa6.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Row, Col, Menu, Button } from \"antd\";\n\nimport { HomeOutlined, ReadOutlined } from \"@ant-design/icons\";\nimport \"./navBar.css\";\nimport \"antd/dist/antd.css\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <Row>\n      <Col sm={14} md={10} lg={8} xl={6}>\n        <div\n          className=\"brand\"\n          style={{\n            fontSize: \"22px\",\n            fontFamily: \"Impact\",\n            color: \"white\",\n          }}\n        >\n          <img\n            src=\"https://res.cloudinary.com/dk4w6vkbg/image/upload/v1607899786/craiglist/house_ravgbp.jpg\"\n            alt=\"icon\"\n            style={{\n              width: \"2rem\",\n              marginRight: \"10px\",\n            }}\n          />\n          CRAIGCLONE\n        </div>\n      </Col>\n\n      {/* Menu */}\n      <Col sm={2} md={3} lg={5} xl={6}>\n        {/* <Menu theme=\"dark\" mode=\"horizontal\"> */}\n        <Menu theme=\"dark\" mode=\"horizontal\" style={{ background: \"#fcaf58\" }}>\n          <Menu.Item key=\"1\" className=\"select\">\n            <HomeOutlined />\n            <span>\n              <NavLink to=\"/home\">Home</NavLink>\n            </span>\n          </Menu.Item>\n          <Menu.Item key=\"2\" className=\"select\">\n            <ReadOutlined />\n            <span>\n              <NavLink to=\"/Following\">My Following</NavLink>\n            </span>\n          </Menu.Item>\n          {/* <Menu.Item key=\"3\">\n            <AboutModal />\n          </Menu.Item> */}\n        </Menu>\n      </Col>\n\n      <Col sm={0} md={8} xl={6}>\n        <div></div>\n      </Col>\n      {/* search bar */}\n      <Col sm={8} md={5} xl={4}>\n        <Button\n          onClick={() => {\n            fetch(`auth/logout`, {\n              method: \"POST\",\n            });\n            window.location.href = \"/\";\n          }}\n          ghost\n        >\n          {\" \"}\n          Log Out\n        </Button>\n      </Col>\n    </Row>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\nimport \"./homePage.css\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport NavBar from \"../../components/navBar\";\nimport { Layout } from \"antd\";\n\nconst { Header, Content } = Layout;\n\nconst HomePage = (props) => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const username = urlParams.get(\"username\");\n  if (username !== null && username !== undefined) {\n    localStorage.setItem(\"username\", username);\n  }\n  const [roomNum, setRoomNum] = useState(\"1\");\n  const [minPrice, setMinPrice] = useState(\"---\");\n  const [maxPrice, setMaxPrice] = useState(\"---\");\n  const [neighbor, setNeighbor] = useState(\"\");\n  // const roomNumRef = useRef();\n  // const minPriceRef = useRef();\n  // const maxPriceRef = useRef();\n  const history = useHistory();\n\n  const handleSearch = () => {\n    let minIntPrice;\n    let maxIntPrice;\n\n    if (minPrice === \"\") {\n      minIntPrice = 0;\n    } else {\n      minIntPrice = parseInt(minPrice.substring(1));\n    }\n\n    if (maxPrice === \"\") {\n      maxIntPrice = 10000000;\n    } else {\n      maxIntPrice = parseInt(maxPrice.substring(1));\n    }\n\n    const url = `/posts?neighborhood=${encodeURIComponent(\n      neighbor\n    )}&rooms=${encodeURIComponent(roomNum)}&minPrice=${encodeURIComponent(\n      minIntPrice\n    )}&maxPrice=${encodeURIComponent(maxIntPrice)}&page=${encodeURIComponent(\n      1\n    )}`;\n\n    history.push(url);\n  };\n\n  return (\n    <Layout>\n      <Header style={{ background: \"#fcaf58\" }}>\n        <NavBar user={props.user} />\n      </Header>\n      <div className=\"back\">\n        <Content>\n          <Container fluid className=\"homepage-container\">\n            <Container>\n              <Row>\n                <Col xs={{ span: 6, offset: 2 }} className=\"p-0\">\n                  <div className=\"welcome\">Dear {props.user}, </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={{ span: 6, offset: 2 }} className=\"p-0\">\n                  <h1 className=\"subwelcome\">\n                    Moving is a start of a new journey.\n                  </h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={{ span: 6, offset: 2 }} className=\"p-0\">\n                  <h1 className=\"subwelcome\">\n                    Today, let me help you find your new place.{\" \"}\n                  </h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col\n                  xs={{ span: 6, offset: 2 }}\n                  className=\"search-form-container p-2 search-form-container\"\n                >\n                  <Form>\n                    <Form.Group controlId=\"room\">\n                      <label\n                        for=\"inputAddress\"\n                        style={{\n                          fontFamily:\n                            \"Brush Script MT, Brush Script Std, cursive\",\n                          fontSize: \"30px\",\n                        }}\n                      >\n                        Neighborhood\n                        <Form.Control\n                          type=\"neighbor\"\n                          placeholder=\"San Francisco\"\n                          onChange={(evt) => setNeighbor(evt.target.value)}\n                        />\n                      </label>\n                    </Form.Group>\n                    <Form.Row>\n                      <Col>\n                        <Form.Group controlId=\"neighbor\">\n                          <Form.Label\n                            style={{\n                              fontFamily:\n                                \"Brush Script MT, Brush Script Std, cursive\",\n                              fontSize: \"30px\",\n                            }}\n                          >\n                            Bedroom number:\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            size=\"sm\"\n                            custom\n                            onChange={(evt) => setRoomNum(evt.target.value)}\n                          >\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group controlId=\"price-from-group\">\n                          <Form.Label\n                            style={{\n                              fontFamily:\n                                \"Brush Script MT, Brush Script Std, cursive\",\n                              fontSize: \"30px\",\n                            }}\n                          >\n                            By price from:\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            size=\"sm\"\n                            custom\n                            onChange={(evt) => setMinPrice(evt.target.value)}\n                          >\n                            <option>$0</option>\n                            <option>$1000</option>\n                            <option>$1500</option>\n                            <option>$2000</option>\n                            <option>$2500</option>\n                            <option>$2500</option>\n                            <option>$3000</option>\n                            <option>$3500</option>\n                            <option>$4000</option>\n                            <option>$4500</option>\n                            <option>$5000</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group controlId=\"price-to-group\">\n                          <Form.Label\n                            style={{\n                              fontFamily:\n                                \"Brush Script MT, Brush Script Std, cursive\",\n                              fontSize: \"30px\",\n                            }}\n                          >\n                            By price to:\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            size=\"sm\"\n                            custom\n                            onChange={(evt) => setMaxPrice(evt.target.value)}\n                          >\n                            <option>$1000</option>\n                            <option>$1500</option>\n                            <option>$2000</option>\n                            <option>$2500</option>\n                            <option>$2500</option>\n                            <option>$3000</option>\n                            <option>$3500</option>\n                            <option>$4000</option>\n                            <option>$4500</option>\n                            <option>$5000</option>\n                            <option>$5500</option>\n                            <option>$6000</option>\n                            <option>---</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                    </Form.Row>\n                    <Row>\n                      <Col xs={{ offset: 0.1 }}>\n                        <Button\n                          variant=\"primary\"\n                          onClick={handleSearch}\n                          style={{\n                            fontFamily:\n                              \"Brush Script MT, Brush Script Std, cursive\",\n                            fontSize: \"25px\",\n                          }}\n                        >\n                          <SearchOutlined />\n                          Search\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={{ span: 6, offset: 7 }} className=\"p-0\">\n                  <h1 className=\"subwelcome\">Best,</h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={{ span: 6, offset: 5 }} className=\"p-0\">\n                  <h1 className=\"subwelcome\">Your friend, Xintong</h1>\n                </Col>\n              </Row>\n            </Container>\n          </Container>\n        </Content>\n      </div>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./signinPage.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction SigninPage() {\n  const urlParams = new URLSearchParams(window.location.search);\n  const username = urlParams.get(\"username\");\n  localStorage.setItem(\"username\", username);\n  console.log(\"username\");\n  console.log(localStorage.getItem(\"username\"));\n\n  return (\n    <div>\n      <div className=\"SignIn\">\n        <div className=\"container-fluid d-flex justify-content-center\">\n          <div className=\"signcard\">\n            <div className=\"card-header\">\n              <div className=\"card-h3\">Sign In</div>\n            </div>\n            <div className=\"card-body\">\n              <form action=\"/auth/login\" method=\"POST\">\n                <div className=\"form-group\">\n                  <label for=\"inputEmail\">Email</label>\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    className=\"form-control\"\n                    placeholder=\" \"\n                    name=\"email\"\n                  />\n                </div>\n                <div className=\"form group\">\n                  <label for=\"inputPassword\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"form-control\"\n                    placeholder=\" \"\n                    name=\"password\"\n                  />\n                </div>\n                <br />\n\n                <button type=\"submit\" className=\"btn btn-dark\">\n                  Sign In\n                </button>\n                <div className=\"form-group\">\n                  Not an user yet?{\" \"}\n                  <Link className=\"card-footerText\" to=\"/signup\">\n                    Sign Up\n                  </Link>\n                  <br />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SigninPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./signupPage.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction SignupPage() {\n  //const urlParams = new URLSearchParams(window.location.search);\n  //const error = urlParams.get(\"error\");\n\n  return (\n    <div>\n      <div className=\"SignIn\">\n        <div className=\"container-fluid d-flex justify-content-center\">\n          <div className=\"signcard\">\n            <div className=\"card-header\">\n              <div className=\"card-h3\">Sign Up</div>\n            </div>\n            <div className=\"card-body\">\n              <form action=\"/auth/register\" method=\"POST\">\n                <div className=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    className=\"form-control\"\n                    placeholder=\" \"\n                    name=\"username\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    className=\"form-control\"\n                    placeholder=\" \"\n                    name=\"email\"\n                  />\n                </div>\n                <div className=\"form group\">\n                  <label for=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"form-control\"\n                    placeholder=\" \"\n                    name=\"password\"\n                  />\n                </div>\n                <br />\n\n                <button type=\"submit\" className=\"btn btn-dark\">\n                  Sign up\n                </button>\n                <div className=\"form-group\">\n                  Already an user?{\" \"}\n                  <Link className=\"card-footerText\" to=\"/signin\">\n                    Sign In\n                  </Link>\n                  <br />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignupPage;\n","export const imageSize = {\n  SMALL: \"50x50c\",\n  MEDIUM: \"300x300\",\n  LARGE: \"600x450\",\n};\n\nexport const getImageUrl = (id, size) => {\n  return `https://images.craigslist.org/${id}_${size}.jpg`;\n};\n","import React from \"react\";\nimport { Card, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./postCard.css\";\nimport { getImageUrl, imageSize } from \"../imageProcessing\";\n\nconst { Meta } = Card;\n\nconst PostCard = (props) => {\n    const displayPrice = props.post.price ? `$${props.post.price}` : \"$0\";\n    const imageUrl = getImageUrl(props.post.images[0], imageSize.MEDIUM);\n    return (\n        <Col className=\"card-list\" sm={12} md={8} lg={6}>\n            <Link to={\"/getContent/\" + props.post._id} key={props.post._id}>\n                <Card\n                    hoverable\n                    style={{ overflow: \"hidden\" }}\n                    cover={<img src={imageUrl} alt=\"\" />}\n                    size=\"small\"\n                >\n                    <Meta\n                        title={props.post.title}\n                        description={\n                            <span>\n                                by: {props.post.author}\n                                <br />\n                                <span>\n                                    address:\n                                    {props.post.address}\n                                </span>\n                                <br />\n                                <span>\n                                    price:\n                                    {displayPrice}\n                                </span>\n                            </span>\n                        }\n                    />\n                </Card>\n            </Link>\n        </Col>\n    );\n};\n\nexport default PostCard;\n","export const imageSize = {\n  SMALL: \"50x50c\",\n  MEDIUM: \"300x300\",\n  LARGE: \"600x450\",\n};\n\nexport const getImageUrl = (id, size) => {\n  return `https://images.craigslist.org/${id}_${size}.jpg`;\n};\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container, Pagination } from \"react-bootstrap\";\nimport { Row, Col } from \"antd\";\nimport PostCard from \"../../components/PostCard/PostCard\";\nimport \"./houseListPage.css\";\nimport { getImageUrl, imageSize } from \"../imageProcessing\";\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport NavBar from \"../../components/navBar\";\n\nconst { Header, Content } = Layout;\n\nconst HouseListPage = (props) => {\n  const location = useLocation();\n  const [posts, setPosts] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(-1);\n\n  const handleChange = (newPosts, newTotalPages, newCurrentPage) => {\n    setCurrentPage(newCurrentPage);\n    setPosts(newPosts);\n    setTotalPages(newTotalPages);\n  };\n\n  const handleSort = (event) => {\n    if (event.target.value === \"lowest\") {\n      // lowest price first\n      console.log(\"lowest\");\n      posts.sort((a, b) => {\n        return a.price - b.price;\n      });\n      setPosts([...posts]);\n    } else if (event.target.value === \"highest\") {\n      // highest price first\n      console.log(\"highest\");\n      posts.sort((a, b) => {\n        return b.price - a.price;\n      });\n      setPosts([...posts]);\n    }\n  };\n\n  const fetchHousings = async () => {\n    try {\n      console.log(`fetch url: ${\"/posts\" + location.search}`);\n      const resp = await fetch(\"/posts\" + location.search);\n      const respJson = await resp.json();\n      console.log(respJson);\n      const params = new URLSearchParams(location.search);\n      handleChange(\n        respJson.apartments,\n        parseInt(respJson.pages),\n        parseInt(params.get(\"page\"))\n      );\n      console.log(\n        `url(${getImageUrl(\n          respJson.apartments[0].images[0],\n          imageSize.MEDIUM\n        )})`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const pageUrl = (pageNum) => {\n    if (pageNum < 1) {\n      pageNum = 1;\n    }\n\n    if (pageNum > totalPages) {\n      pageNum = totalPages;\n    }\n\n    const params = new URLSearchParams(location.search);\n    params.set(\"page\", pageNum);\n\n    return params.toString();\n  };\n\n  useEffect(() => {\n    fetchHousings();\n  }, []);\n\n  return (\n    <Layout>\n      <Header style={{ background: \"#fcaf58\" }}>\n        <NavBar user={props.user} />\n      </Header>\n\n      <Content>\n        <Row>\n          <div style={{ padding: \"10px\", margin: \"0 0 0 20px\" }}>\n            <span style={{ margin: \"0 10px 0 0\" }}>Sort by:</span>\n            <select onChange={handleSort} className=\"dropdown-main\">\n              <option value=\"lowest\">Lowest price</option>\n              <option value=\"highest\">Highest price</option>\n            </select>\n          </div>\n          <br />\n        </Row>\n        <Row>\n          {posts.map((post, idx) => (\n            <PostCard key={post._id} post={post} />\n          ))}\n        </Row>\n        <Row justify=\"center\">\n          <Pagination>\n            <Pagination.First href={`/posts?${pageUrl(1)}`} />\n            <Pagination.Prev href={`/posts?${pageUrl(currentPage - 1)}`} />\n            <Pagination.Item active href={`/posts?${pageUrl(currentPage)}`}>\n              {currentPage}\n            </Pagination.Item>\n            <Pagination.Next href={`/posts?${pageUrl(currentPage + 1)}`} />\n            <Pagination.Last href={`/posts?${pageUrl(totalPages)}`} />\n          </Pagination>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default HouseListPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { getImageUrl, imageSize } from \"../imageProcessing\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./singlePage.css\";\nimport { UserAddOutlined, HighlightOutlined } from \"@ant-design/icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Layout } from \"antd\";\nimport NavBar from \"../../components/navBar\";\n\nconst { Header, Content } = Layout;\n\nconst SinglePage = (props) => {\n  const { houseId } = useParams();\n  const [house, setHouse] = useState(null);\n\n  const [anno, setAnno] = useState([]);\n\n  const fetchAnno = async () => {\n    const annoResp = await fetch(\n      `/posts/getAnnotations?postId=${encodeURIComponent(\n        houseId\n      )}&username=${encodeURIComponent(props.user)}`\n    );\n    const annoRespJson = await annoResp.json();\n\n    setAnno(annoRespJson);\n  };\n\n  const fetchHouse = async (houseId) => {\n    const houseResp = await fetch(`/posts/getContent/${houseId}`);\n    const houseRespJson = await houseResp.json();\n    setHouse(houseRespJson[\"house\"]);\n  };\n\n  useEffect(() => {\n    fetchHouse(houseId);\n    fetchAnno();\n  }, [anno]);\n\n  if (house) {\n    return (\n      <Layout>\n        <Header style={{ background: \"#fcaf58\" }}>\n          <NavBar user={props.user} />\n        </Header>\n        <Content>\n          <Container>\n            <Row className=\"justify-content-center\">\n              <h1 className=\"post-title\">\n                {house[\"title\"]} - ${house[\"price\"]}/month{\" \"}\n              </h1>\n\n              <Col xs={6}>\n                <div className=\"image-carousel__outer\">\n                  <Carousel\n                    showArrows={true}\n                    infiniteLoop={true}\n                    useKeyboardArrows={true}\n                  >\n                    {house[\"images\"].map((img, idx) => (\n                      <img\n                        key={idx.toString()}\n                        src={getImageUrl(img, imageSize.MEDIUM)}\n                        alt=\"\"\n                      />\n                    ))}\n                  </Carousel>\n\n                  <Row>\n                    <Col xs={12}>\n                      <form action=\"/posts/addAnnotations\" method=\"POST\">\n                        <div className=\"form-group\">\n                          <label for=\"inputComment\">\n                            Write down your note for this:\n                          </label>\n                          <input\n                            type=\"text\"\n                            id=\"comment\"\n                            className=\"form-control\"\n                            placeholder=\" \"\n                            name=\"comment\"\n                          />\n                          <input\n                            type=\"hidden\"\n                            name=\"postId\"\n                            value={houseId}\n                            id=\"postId\"\n                          />\n                          <input\n                            type=\"hidden\"\n                            name=\"username\"\n                            value={props.user}\n                            id=\"username\"\n                          />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-dark\">\n                          <HighlightOutlined /> Write\n                        </button>\n                        <div className=\"comments\">\n                          {anno.map((singleanno, idx) => (\n                            <div>\n                              {singleanno[\"comment\"]} is written by you at\n                              &nbsp;\n                              {singleanno[\"time\"]}{\" \"}\n                            </div>\n                          ))}\n                        </div>\n                      </form>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={12}>\n                      {\" \"}\n                      <form action=\"/users/updateFollowing\" method=\"post\">\n                        <input\n                          type=\"hidden\"\n                          name=\"username\"\n                          id={props.user}\n                          value={props.user}\n                        />\n                        <input\n                          type=\"hidden\"\n                          name=\"following\"\n                          id={house[\"author\"]}\n                          value={house[\"author\"]}\n                        />\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-dark\"\n                          style={{}}\n                        >\n                          <UserAddOutlined /> Follow the author{\" \"}\n                          {house[\"author\"]}\n                        </button>\n                      </form>\n                    </Col>\n                  </Row>\n\n                  <div className=\"postingbody\">{house[\"body\"]}</div>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </Content>\n      </Layout>\n    );\n  } else {\n    return <main></main>;\n  }\n};\n\nexport default SinglePage;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Layout } from \"antd\";\nimport NavBar from \"../../components/navBar\";\n\nconst { Header, Content } = Layout;\n\nconst FollowingPage = (props) => {\n  const [following, setFollowing] = useState([]);\n\n  const fetchFollowing = async () => {\n    const followingResp = await fetch(\n      `/users/userFollwing?username=${encodeURIComponent(props.user)}`\n    );\n\n    const followingRespJson = await followingResp.json();\n    setFollowing(followingRespJson[\"following\"]);\n  };\n\n  useEffect(() => {\n    fetchFollowing();\n  }, [following]);\n\n  return (\n    <Layout>\n      <Header style={{ background: \"#fcaf58\" }}>\n        <NavBar user={props.user} />\n      </Header>\n      <Content>\n        <Container>\n          <div\n            style={{\n              display: \"inline-grid\",\n              gridTemplateColumns: \"auto auto auto auto\",\n              gridGap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            {following.map((author, idx) => (\n              <div style={{ width: \"300px\" }}>\n                <a href={\"/author/\" + author}>\n                  👉 Click to See {author} Posts 👈\n                </a>\n              </div>\n            ))}\n          </div>\n        </Container>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default FollowingPage;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport { useParams, useLocation } from \"react-router-dom\";\n\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\n\nimport { Carousel } from \"react-responsive-carousel\";\n\nimport { getImageUrl, imageSize } from \"../imageProcessing\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Layout } from \"antd\";\n\nconst { Header, Content } = Layout;\n\nconst AuthorPage = () => {\n  const { author } = useParams();\n  const [posts, setPosts] = useState(null);\n\n  const fetchPosts = async (author) => {\n    console.log(author);\n    const houseResp = await fetch(\"/posts/getList/\" + author);\n    const houseRespJson = await houseResp.json();\n    setPosts(houseRespJson);\n  };\n\n  useEffect(() => {\n    fetchPosts(author);\n  }, []);\n\n  if (posts) {\n    return (\n      <Layout>\n        <Header style={{ background: \"#fcaf58\" }}>\n          <NavBar />\n        </Header>\n        <Content>\n          <Container>\n            <Row className=\"justify-content-center\">\n              <h1 className=\"post-title\">\n                {posts.map((post, idx) => (\n                  <div>\n                    <a href={\"/getContent/\" + post[\"id\"]}>\n                      👉 Click to See {post[\"title\"]}👈\n                    </a>\n                  </div>\n                ))}\n              </h1>\n            </Row>\n          </Container>\n        </Content>\n      </Layout>\n    );\n  } else {\n    return <main></main>;\n  }\n};\n\nexport default AuthorPage;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport SigninPage from \"./pages/SigninPage/SigninPage\";\nimport SignupPage from \"./pages/SignupPage/SignupPage\";\nimport HouseListPage from \"./pages/HouseListPage/HouseListPage\";\nimport SinglePage from \"./pages/SinglePage/SinglePage\";\n//import HouseDetailPage from \"./pages/HouseDetailPage\";\n//import AnnotationPage from \"./pages/AnnotationPage\";\nimport FollowingPage from \"./pages/FollowingPage/FollowingPage\";\nimport AuthorPage from \"./pages/AuthorPage/AuthorPage\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"username\");\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={SigninPage} />\n            <Route path=\"/signin\" component={SigninPage} />\n            <Route path=\"/signup\" component={SignupPage} />\n            <Route\n              path=\"/home\"\n              render={(props) => <HomePage {...props} user={user} />}\n            />\n\n            <Route path=\"/posts\" component={HouseListPage} />\n            <Route\n              path=\"/Following\"\n              render={(props) => <FollowingPage {...props} user={user} />}\n            />\n            <Route\n              path=\"/getContent/:houseId\"\n              render={(props) => <SinglePage {...props} user={user} />}\n            />\n            <Route path=\"/author/:author\" component={AuthorPage} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}